{"version":3,"file":"media.js","sourceRoot":"","sources":["../../../src/components/media.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, css, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {styleMap, StyleInfo} from 'lit/directives/style-map.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\n\n@customElement('vtb-media')\nexport class VtbMediaElement extends LitElement {\n  @property({type: String})\n  src = '';\n\n  @property({type: Number})\n  width = Number.NaN;\n\n  @property({type: Number})\n  height = Number.NaN;\n\n  @property({type: String})\n  crop?: string = '';\n\n  @property({type: String})\n  alt?: string = '';\n\n  @property({type: Boolean})\n  cover?: boolean = false;\n\n  @property({type: String, attribute: 'cover-position'})\n  cover_position?: string = '';\n\n  static override styles = css`\n    :host {\n      display: inline-block;\n      overflow: hidden;\n    }\n\n    img {\n      display: block;\n      margin: 0 auto;\n    }\n  `;\n\n  private _imageStyles(): StyleInfo {\n    const imgStyle: StyleInfo = {};\n    if (this.width > 0) {\n      imgStyle.width = this.width + 'px';\n    }\n    // else {\n    //   imgStyle.width = 'auto';\n    // }\n\n    if (this.height > 0) {\n      imgStyle.height = this.height + 'px';\n    }\n    // else {\n    //   imgStyle.height = 'auto';\n    // }\n\n    if (this.cover) {\n      if (!this.width || this.width <= 0) {\n        imgStyle.width = '100%';\n      }\n\n      if (!this.height || this.height <= 0) {\n        imgStyle.height = '100%';\n      }\n\n      imgStyle.objectFit = 'cover';\n      imgStyle.objectPosition = this.cover_position\n        ? this.cover_position\n        : 'center';\n    } else {\n      imgStyle.objectFit = 'contain';\n      imgStyle.objectPosition = this.cover_position\n        ? this.cover_position\n        : 'center';\n    }\n\n    return imgStyle;\n  }\n\n  private _applyCrop(src: string, crop?: string): string {\n    if (src && crop) {\n      // a url can point to amazoneaws.com:\n      // https://s3-eu-west-1.amazonaws.com/media.<customer>.domain/<crop/crop>/filename.jpeg\n      // or\n      // https://media.<customer>.domain/<crop/crop>/filename.jpeg\n\n      const url = new URL(src);\n\n      const path = url.pathname.split('/');\n      const old_crop = [];\n\n      path.shift(); // remove first (empty) element\n\n      old_crop.push(path.splice(path.length - 2, 1)); // remove second part of crop\n      old_crop.push(path.splice(path.length - 2, 1)); // remove first part of crop\n      old_crop.reverse();\n\n      if (old_crop.join('/') == crop) {\n        console.debug(\n          'Requested crop is the same as current crop, return original url. Remove crop (attribute) from vtb-media element for optimization.'\n        );\n        return src;\n      }\n\n      // add all pieces to a list\n      const src_pieces = [];\n      src_pieces.push(url.origin);\n\n      // if path length > 1 we probably have a amazonaws url\n      // so we need to add the customer domain part\n      if (path.length > 1) {\n        src_pieces.push(path.shift());\n      }\n\n      // add the new cropsize\n      src_pieces.push(crop);\n\n      // add the filename\n      src_pieces.push(path.shift());\n\n      // join the pieces back together\n      src = src_pieces.join('/');\n    }\n\n    return src;\n  }\n\n  override render() {\n    const imgStyle: StyleInfo = this._imageStyles();\n    let src: string = this.src;\n\n    if (src) {\n      if (this.crop) {\n        src = this._applyCrop(this.src, this.crop);\n      }\n\n      return html`\n        <img\n          src=${src}\n          style=${styleMap(imgStyle)}\n          alt=${ifDefined(this.alt)}\n        />\n      `;\n    }\n\n    return '';\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'vtb-media': VtbMediaElement;\n  }\n}\n"]}