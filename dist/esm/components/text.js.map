{"version":3,"file":"text.js","sourceRoot":"","sources":["../../../src/components/text.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, css, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {unsafeHTML} from 'lit/directives/unsafe-html.js';\n// import {styleMap, StyleInfo} from 'lit/directives/style-map.js';\n\nimport Editor from '@ckeditor/ckeditor5-core/src/editor/editor';\nimport InlineEditor from '@ckeditor/ckeditor5-editor-inline/src/inlineeditor';\n\nimport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n// import UploadAdapter from '@ckeditor/ckeditor5-adapter-ckfinder/src/uploadadapter';\n// import Autoformat from '@ckeditor/ckeditor5-autoformat/src/autoformat';\nimport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\nimport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n// import BlockQuote from '@ckeditor/ckeditor5-block-quote/src/blockquote';\n// import EasyImage from '@ckeditor/ckeditor5-easy-image/src/easyimage';\nimport Heading from '@ckeditor/ckeditor5-heading/src/heading';\n// import Image from '@ckeditor/ckeditor5-image/src/image';\n// import ImageCaption from '@ckeditor/ckeditor5-image/src/imagecaption';\n// import ImageStyle from '@ckeditor/ckeditor5-image/src/imagestyle';\n// import ImageToolbar from '@ckeditor/ckeditor5-image/src/imagetoolbar';\n// import ImageUpload from '@ckeditor/ckeditor5-image/src/imageupload';\nimport Link from '@ckeditor/ckeditor5-link/src/link';\nimport List from '@ckeditor/ckeditor5-list/src/list';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n// import Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport {ButtonView} from 'ckeditor5/src/ui';\n\nimport '@ckeditor/ckeditor5-theme-lark';\n\nclass VtbTextSaveCommand extends Command {\n  override execute() {\n    console.info('VtbTextSaveCommand:execute');\n    // console.info(this.editor);\n  }\n}\n\n// class VtbTextCommandsPlugin extends Plugin {\n//   init() {\n//     const editor = this.editor;\n//     editor.commands.add('save', new VtbTextSaveCommand(editor));\n//   }\n// }\n\n// class VtbTextCommandUI extends Plugin {\n//   init () {\n//     const editor = this.editor;\n//     editor.ui.componentFactory.add('save', locale => {\n//       return {\n\n//       })\n//   }\n// }\n\nfunction VtbTextSave(editor: Editor) {\n  // console.info('VtbTextSave registerd');\n  editor.commands.add('save', new VtbTextSaveCommand(editor));\n  editor.ui.componentFactory.add('save', (locale) => {\n    const button = new ButtonView(locale);\n    // const command = editor.commands.get('save');\n    const t = editor.t;\n\n    button.set({\n      label: t('Save'),\n      withText: true,\n      tooltip: true,\n      isToggleable: true\n    });\n\n    button.on('execute', () => {\n      editor.execute('save');\n      editor.editing.view.focus();\n    });\n\n    // button.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n\n    return button;\n  });\n}\n\n@customElement('vtb-text')\nexport class VtbTextElement extends LitElement {\n  static override shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true\n  };\n\n  protected isEditorInitialized: Boolean = false;\n  protected dataIsChanged: Boolean = false;\n  protected editor?: InlineEditor = undefined;\n  protected _destroy_timer?: ReturnType<typeof setTimeout>;\n\n  @property({type: Boolean})\n  editable: Boolean = false;\n\n  @property({\n    type: String,\n    attribute: false,\n    hasChanged(newVal: string, oldVal: string) {\n      return Boolean(newVal !== oldVal);\n    }\n  })\n  contents: string | null = '';\n\n  private get _editor(): HTMLElement | null {\n    return this.querySelector('div#editor-' + this.id);\n  }\n\n  static override styles = css`\n    :host {\n      display: block;\n    }\n  `;\n\n  constructor() {\n    super();\n    // console.debug('vtbtext:constructor');\n    // create an id for the editor when no id is defined\n    // this makes sure no conflicts can occur when\n    // having multiple editors active at the same time\n    if (!this.id) {\n      this.id =\n        Math.random().toString(36).substring(2, 15) +\n        Math.random().toString(36).substring(2, 15);\n    }\n  }\n\n  override createRenderRoot() {\n    // ckEditor does not work in the shadow dom\n    // it'll throw an error as soon as you try to\n    // type anything in the editor.\n    // the main error is coming from @ckeditor/ckeditor5-utils/src/dom/getborderwidths\n    // console.debug('vtbtext:createRenderRoot');\n    return this;\n  }\n\n  override connectedCallback() {\n    // console.debug('vtbtext:connectedCallback');\n    super.connectedCallback();\n\n    // copy innerHTML to the contents property\n    this.contents = this.innerHTML.trim();\n\n    // remove all childNodes and add them\n    // to the editor container\n    let childToDelete = this.lastChild;\n    while (childToDelete) {\n      this.removeChild(childToDelete);\n      childToDelete = this.lastChild;\n    }\n  }\n\n  override render() {\n    // console.debug('vtbtext:render');\n\n    // TODO: check if innerHTML and content are the same,\n    // if not copy contents to innerHTML\n    // console.debug('check innerHTML and content: ', {\n    //   'innerHTML': this.innerHTML,\n    //   'contents': this.contents,\n    //   'same?': Boolean(this.innerHTML == this.contents)\n    // });\n\n    // if (this.innerHTML != this.contents) {\n    //   console.debug('copy contents to innerHTML');\n    //   this.innerHTML = this.contents;\n    // }\n\n    // nothing fancy to render..\n    return html`\n      <div id=\"editor-container-${this.id}\" @click=${this.clickHandler}>\n        <div id=\"editor-${this.id}\">${unsafeHTML(this.contents)}</div>\n      </div>\n    `;\n  }\n\n  clickHandler(_e: Event) {\n    // console.debug('vtbtext:clickHandler: ', _e);\n\n    // // console.debug('check innerHTML and content: ', {\n    //   innerHTML: this.innerHTML,\n    //   contents: this.contents,\n    //   'same?': Boolean(this.innerHTML == this.contents),\n    // });\n\n    if (this.isEditorInitialized && this._destroy_timer) {\n      // console.debug('clear editor destruction timer');\n      clearTimeout(this._destroy_timer);\n      this._destroy_timer = undefined;\n    }\n\n    if (this.editable && !this.isEditorInitialized) {\n      // console.debug('initializing editor');\n\n      if (!this._editor) {\n        console.warn('not initializing the editor, editor is null');\n        return;\n      }\n\n      // set the inialized bit..\n      this.isEditorInitialized = true;\n\n      InlineEditor.create(this._editor, {\n        updateSourceElementOnDestroy: true,\n        // every tool has a plugin!\n        plugins: [\n          VtbTextSave,\n          Essentials,\n          Heading,\n          Bold,\n          Italic,\n          Link,\n          List,\n          Paragraph\n          // Autosave,\n        ],\n        // these are the available tools\n        toolbar: [\n          // 'save',\n          '|',\n          'heading',\n          '|', // separator!\n          'bold',\n          'italic',\n          'link',\n          'bulletedList',\n          'numberedList',\n          'undo',\n          'redo'\n        ]\n      })\n        .then((editorInstance) => {\n          // console.debug('promise:then');\n          this.editor = editorInstance;\n\n          if (!this.editor) {\n            // console.debug('no editor (yet)');\n            return;\n          }\n\n          // keep track on focus.\n          // if lostFocus and changed, trigger changed event\n          this.editor.ui.focusTracker.on(\n            'change:isFocused',\n            (_evt, _name, isFocused) => {\n              // console.debug('focus changed');\n              if (!isFocused) {\n                this.lostFocus();\n              }\n            }\n          );\n\n          // since we are initializing dynamically, we need to explicitly focus\n          this.editor.focus();\n        })\n        .catch((error) => {\n          // console.debug('received error');\n          console.error(error.stack);\n        });\n    }\n  }\n\n  protected lostFocus() {\n    // console.debug('vtbtext:lostFocus');\n\n    if (!this.editor) {\n      // console.debug('no editor (yet)');\n      return;\n    }\n\n    // console.debug('changed data: ', this.editor.getData());\n\n    // dispatch custom event\n    const changed_content = this.editor.getData();\n    const event = new CustomEvent('vtbTextChanged', {\n      detail: {\n        content: changed_content\n      },\n      bubbles: true\n    });\n    // console.debug('dispatching change event: ');\n    this.dispatchEvent(event);\n\n    // schedule destroying the editor after losing focus\n    // console.debug('schedule destroy');\n    const destroy = this._destroyEditor.bind(this);\n    this._destroy_timer = setTimeout(destroy, 3000);\n    // }\n  }\n\n  protected _destroyEditor() {\n    // console.debug('destroying editor..');\n    if (this.editor) {\n      this.editor.destroy();\n      this.isEditorInitialized = false;\n      delete this.editor;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'vtb-text': VtbTextElement;\n  }\n}\n"]}